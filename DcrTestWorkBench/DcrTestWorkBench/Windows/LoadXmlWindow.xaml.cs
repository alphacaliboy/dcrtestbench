/*
    Load XML format generated by P21 Rule
    Copyright (C) 2013 Dai Nguyen

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

using DcrTestWorkBench.Models;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Windows;
using System.Windows.Controls;

namespace DcrTestWorkBench.Windows
{
    public partial class LoadXmlWindow : Window
    {
        public List<P21DataField> DataFields { get; private set; }
        public bool IsSubmit { get; private set; }

        public LoadXmlWindow()
        {
            InitializeComponent();

            this.DataFields = new List<P21DataField>();
            this.IsSubmit = false;
        }

        private void btnSubmit_Click(object sender, RoutedEventArgs e)
        {
            if (!String.IsNullOrEmpty(txtXML.Text))
            {
                try
                {
                    DataFields = Helper.ParseXML(txtXML.Text);

                    if (this.DataFields.Count() > 0)
                    {
                        this.IsSubmit = true;
                        this.Close();
                    }
                    else
                        lbStatus.Content = "No valid content detected!";
                }
                catch (Exception ex)
                {
                    lbStatus.Content = ex.Message.Length > 100 ? 
                        string.Format("{0}...", ex.Message.Substring(0, 100)) : ex.Message;
                }
            }
            else
                lbStatus.Content = "Please paste XML generated by P21 in the Text Box above.";
        }

        private void btnCancel_Click(object sender, RoutedEventArgs e)
        {
            this.Close();
        }

        private void btnPaste_Click(object sender, RoutedEventArgs e)
        {
            if (Clipboard.ContainsText())
                txtXML.Text = Clipboard.GetText();
        }

        private void txtXML_PreviewDragEnter(object sender, DragEventArgs e)
        {
            e.Effects = DragDropEffects.Copy;
        }

        private void txtXML_PreviewDragOver(object sender, DragEventArgs e)
        {
            e.Handled = true;
        }

        private void txtXML_PreviewDrop(object sender, DragEventArgs e)
        {
            object text = e.Data.GetData(DataFormats.FileDrop);
            TextBox tb = sender as TextBox;
            string file = ((string[])text)[0];

            if (tb != null && File.Exists(file))
                tb.Text = File.ReadAllText(file);
        }
    }
}
